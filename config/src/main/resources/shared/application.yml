spring:
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer    
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer   
      properties:
        spring.json.trusted.packages: '*'
    bootstrap-servers:
    - kafka:9092 
  zipkin:
    base-url: http://zipkin:9411/
  sleuth: 
    sampler: 
      probability: 1
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://host.docker.internal:8089/auth/realms/StoreRealm 
eureka:
  client:
    serviceUrl:
      defaultZone: http://annuaire:1111/eureka/
    healthcheck:
      enabled: true
    preferSameZoneEureka: true
  instance:
    metadataMap:
      zone: zone1
    
management:
  endpoints:
    web:
      exposure:
        include:
        - env
        - beans
        - health
        - metrics
        - httptrace
        - refresh
        - gateway
        - prometheus
  endpoint:
    health:
      show-details: always
    
app:
  channel:
    account: account
    order: order
    
logging:
  level:
    '[org.springframework.security]': debug
